
# =====限流=====================
# 对所有产品页相关链接限流(严格级别,对用户体验有一定影响,一般情况下,对大多数爬虫有显著效果)
# limit_req zone=user_limit burst=5 nodelay;

location ~ ^/product/ {
    # burst参数的数值越小，限制越严格,3~5是十分严格,10是一般严格
    limit_req zone=product_limit burst=7 nodelay; 
    limit_req zone=bot_limit burst=1 nodelay;

    # 可选：自定义限流返回状态码
    limit_req_status 429; 
    # 继续 WordPress 的 rewrite 规则
    try_files $uri $uri/ /index.php?$args;
}
 

# 匹配所有包含 "add-to-cart=" 的请求
# 点击模板产品卡片添加购物车按钮触发:POST /?wc-ajax=add_to_cart (基础行为),根据不同模板,可能附带POST /wp-admin/admin-ajax.php,GET /?wc-ajax=get_refreshed_fragments 等其他副操作
# 如果从产品详情页点击添加购物车,则发送的情况可能有所不同,比如POST /产品路径 ,这里面可能没有出现'add_to_cart'字符串

location ~* "add-to-cart=" {
    # 限制请求频率：1次/秒，突发最多2次，超出直接拒绝（不排队）
    limit_req zone=cart_limit burst=2 nodelay;

    # 可选：记录被限流的日志（便于监控）
    # limit_req_log_level warn;
    limit_req_status 429;

    # 继续交给 WordPress/WooCommerce 处理
    try_files $uri $uri/ /index.php$is_args$args;
}
# 媒体文件访问限流
# location ~ ^/wp-content/uploads/ { #可以对所有文件限流
#   limit_req zone=uploads_limit burst=20 nodelay;
#   try_files $uri =404;
# }
# 对图片限流
location ~* ^/wp-content/uploads/.*\.(webp|jpg|png)$ { 
    limit_req zone=img_limit burst=20 nodelay;
    # 限制下载速度为200KB/s
    limit_rate 200k;  

    # 缓存优化
    expires 1y;
    add_header Cache-Control "public, immutable";

    # 静态文件直接返回(检查 $uri（请求路径对应的物理文件）是否存在,存在直接返回,否则404；)
    try_files $uri =404;
}


# 对php脚本请求限流
# location ~ \.php$ {
#       # 只对 POST 请求限流
#     limit_req zone=post_limit burst=3 nodelay if=$is_post;
#     limit_req_status 429;
# }
# --- 可选：拦截高频 bot 请求 ---
# location / {
#     limit_req zone=bots nodelay;
#     # 正常流量继续
#     try_files $uri $uri/ /index.php?$args;
