



SteamChina="$cp86\SteamChina"
MyDockFinderSteam="$SteamChina\steamapps\common\MyDockFinder"

# powershell
pwsh_home=$pwsh7_home
pwsh5_home=(rvpa "$winSystem32\WindowsPowerShell\v*")
WindowsPowershell_home="$pwsh5_home"
pwsh7_home="$cp\powershell\7"

# windows terminal 的不同版本有不同的配置目录(便携版portable)无论放在哪里,产生的配置文件是独立放到用户的某个目录下
wtPortableConf_Home="$LocalAppdata\Microsoft\Windows Terminal"
wtStoreConf_Home_Pattern= "$LocalAppData\Packages\Microsoft.WindowsTerminal_*\LocalState"
wtConf_Home_Pattern=($SystemCaption -like '*server*') ? $wtPortableConf_Home : $wtStoreConf_Home_Pattern
#考虑到有些设备用的是windows server ,比较可能用的是非应用商店的版本,这里需要判断
wtConf_Home=(test-path $wtConf_Home_Pattern) ? (rvpa $wtConf_Home_Pattern) : "!!! Please Install Windows Terminal First! Or Use Portable Version Windows Terminal (deploy-wtsettings with -Portable optoin)"
wtPortable_Home="$exes\wt\wt_portable"

# typora路径
typora_cache="$appdata\Typora"
typora_home ="$cp\typora" 
typora_recover="$Typora_cache\draftsRecover"
Typora_Config="$appdata\typora\conf"
Typora_Config_backup="$configs\Typora\conf"
# Typora_Themes="$repos\Typora\Themes"
Typora_Themes="$appdata\Typora\themes"
Typora_Themes_backup="$configs\Typora\themes"
Typora_User_Image="$appdata\Typora\typora-user-images"
Typora_Themes_webicons="$Typora_Themes\SeeYue\Icon"


adrive_home="$localAppData\Programs\aDrive"
aliases="$PS\aliases"

appdata_user="$home\appdata"
AVtools="$exes\AVTools"
baiduTranslation_home="$cp\baidu-translate-client"
bebo_home="$exes\bebo\bebo-course-platform"


RainMeter_home="$cp\Rainmeter"
KwMusic_home="$exes\kwMusic"

calibre_home="$cp\calibre2"
calibreLibrary="$home\Calibre Library"

clash_home="$exes\cfw"
Verge_all_home="$cp\Clash Verge"
Verge_User_home="$LocalAppData\Clash Verge" #C:\Users\cxxu\AppData\Local\Clash Verge
Verge_home=(Test-Path $Verge_all_home) ? $Verge_all_home : $Verge_User_home
conda_home=$miniconda3_home

condarc="$home\.condarc"

cp_user="$localAppData\programs"
Nvidia_CEF_home="$cp\NVIDIA Corporation\NVIDIA App\CEF"
Nvidia_Home="$cp\NVIDIA Corporation"

cp86ms="$cp86\Microsoft"


DefaultPoshTheme='iterm2_cxxu'
desktop="$USERPROFILE\desktop"
dingtalk_bin="$cp86\DingDing\main\current"
dismPlusPlus="$exes\Dism++"
ditto_home="$exes\ditto"




edge_beta_home="$cp86ms\Edge Beta\Application"
edge_home="$cp86ms\edge\application"
edge_portable_home="$exes\edgep"
ela_backend_proj="$repos\ela\backend\ela"
endnote_home="$cp86\endnote*"
endnote_styles="$endnote_home\styles"
envs="$PS\PwshEnvs"
windhawk_home="$cp\WindHawk"
WindHawk_portable_home="$exes\WindHawk"


FireFox_home="$cp\Mozilla Firefox"

fonts="$windows\fonts"

formula="$math\miscellaneous\formula"

# Geogebra使用在线版本就好,没有网络时才考虑本地(离线客户端保存功能做的不太好)
Geogebra_Series_home= "$localAppData\GeoGebra*\app*"


# git_home="$exes\PortableGit"
git_home="$cp\Git"
Git_portable_home="$exes\PortableGit"
Git_portable_bin="$exes\PortableGit\bin"


hitomishimatani="$music\hitomishimatani"
npm_home=""



# FDM_home="$cp\Softdeluxe\Free Download Manager"
# IDM_home="$exes\idm"
IDM_home="$cp86\Internet Download Manager"

Thunder_home="$exes\Thunder"

JBToolBoxApps="$LocalAppData\Jetbrains\Toolbox\apps"
Jetbrains_D="$cp\Jetbrains"
jetbrains_user="$LocalAppData\jetbrains"
jetbrains="$cp\JetBrains"

latex_materials="$blogs\latex_materials\"
learning_log="$DjangoProjects\learning_log"
learning_log_home="$learning_log\ll_env\scripts"
lingoes_home="$exes\lingoes_portable_2.9.2_cn"
linuxShellScripts="$Scripts\linuxShellScripts"
nvm_home="$appdata\nvm"
ll_env="$learning_log\ll_env"


math="$neep\math"
mathtype_home="$cp86\mathtype"
MiFlash_home="$android_root_roms\Miflash2020"
miniconda3_env="$home\miniconda3\envs"
miniconda3_home="$home\miniconda3"
MiPhoneAssistant="$cp86\MiPhoneAssistant"
MobaXterm="$exes\MobaXterm_Portable_v22.0"





NavicatModels="$Documents\Navicat\Premium\profiles"
neep="$data\neep"
neep_408="$neep\408"
neovim_conf_home="$home/AppData/Local/nvim"
neovim_config="$LocalAppData\nvim\"
neovim_config="$neovim_conf_home/init.vim"
netmon="$safe360_home\netmon"
# 如果使用早期的安装版或便携版的node,npm,则使用这个配置
# node_home_single=(rvpa "$exes\node-v*")
# 如果使用nvm工具来管理node(能够在不同node版本间跳转);这里设置默认node版目录
node_home="$cp\nodejs"
office_home_cp="$cp\Microsoft office"
office16_bin_cp="$office_home_cp\root\Office16"
office16_bin_portable="$office16_home_portable\office16"
office16_bin_startup="$office16_bin\startup"
office16_home_portable="$exes\office2016"




pandoc_portable_home="$exes\pandoc"
pandoc_home="$cp\pandoc"
pcMaster_home="$exes\PCMaster"
pdfxeditor_home="$exes\pdfTools\pdfxeditor_cracked"
picgo_CLI_config="$profile\.picgo"
picgo_config="$appdata\picgo"

pixpin_home="$localAppDataPrograms\pixpin"
posh_home="$cp86\oh-my-posh"
posh_theme_home="$posh_home\themes"
posh_user_theme_home="$LOCALAPPDATA\Programs\oh-my-posh\themes"

potplayer_home="$exes\avtools\potplayer"
pshome_user="$documents\powershell\modules"



pyside6="$condaPythonEnvs\pytorch_CCSER\lib\site-packages\pyside6"
python_user_depends="$appdata\python"
pythonLearn="$repos\pythonLearn"

qq_home="$cp\Tencent\QQNT"
qq_legcy_home="$cp86\Tencent\QQ\Bin"
qqFiles="$TencentFiles\838808930\FileRecv"
quicker_home="$cp\quicker"



software360_home="$cp86\360"
safe360_home="$software360_home\360safe"
sandbox_boxes_home="$cp\sandbox"
# sandboxie_home="$exes\sandboxie-plus" #portable
; sandboxie_home="$cp\sandboxie-plus"
sandboxie_home="$scoop_global\apps\sandboxie-plus\current"


sedLearn="$linuxShellScripts\sedLearn"
snipaste_home="$exes\snipaste"
sogou_home="$cp86\SogouInput"
sogou_tools="$windows\SysWOW64\IME\SogouPY"
sogouInputMethodShortcuts_home="$Start_Menu_programs\搜狗输入法"
sogouWizard="$cp86\SogouInput\*.*.*"
speechDatabases="$graduationDesign\speechDatabases"
ssh_home="$home\.ssh"



store="$(Get-ChildItem $windowsApps_cp\microsoft.windowsStore*x64*)"
sublime_text="$cp\sublime text\"

TencentFiles="$documents\Tencent Files"
themes="$windows\resources\themes"
tmp_clipboard="$repos\PythonLearn\scripts\wiki_content.md"
tools_portable="$exes\tools_portable"
trafficMonitor_home="$exes\TrafficMonitor"
trafficMonitor_plugins="$trafficMonitor_home\plugins"


vimrc_nvim=$neovim_config
vmware_home="$cp86\VMware"
vmware_workstation_home="$vmware_home\VMware Workstation"
Vmware_Ovf_home="$vmware_workstation_home\OVFTool"

Vmware_Ovf_Alone="$cp\VMware\VMware OVF Tool"

vpnTools="$exes\vpnTools"
vscode_bin="$vscode_home\bin"
vscode_home="$cp\Microsoft VS Code"
vscode_settings="$appdata\code\user"
MyDockFinder_home="$exes\MydockFinder"

webtools="$exes\webtools"
# wechat_home="$cp\Tencent\WeChat"
wechat_home="$scoop_global\apps\wechat\current"
wechatFiles="$Documents\WeChat Files"
wechat_downloads= (test-path "$Documents\WeChat Files") ? "$wechatFiles\wxid_*\FileStorage\File" : "Please Install Wechat First!"
wechat_downloads= "$Documents\WeChat Files\wxid_*\FileStorage\File"

WindowsTerminal_home=(rvpa "$WindowsApps_cp\Microsoft.WindowsTerminal*\")

# C:\Users\cxxu\Documents\WeChat Files\wxid_bnvfpeurb62f12\FileStorage
windowsApps_cp="$cp\WindowsApps"
windowsApps_user="$LocalAppData\Microsoft\WindowsApps"
WinXray_home="$vpnTools\winXray"


zip360_home="$software360_home\360zip"
RecycleBinDir="$SystemDrive\RecycleBinDir"
wedo_home="$MK\wedo"
adb_home="$exes\platform-tools"
AndroidSdk="$LocalAppData\Android\Sdk"


nssm_home="$exes\nssm"
pdfTools_home="$exes\pdfTools"
ffmpeg_bin="$exes\ffmpeg\bin"
smmv_home="$AVtools\SolveigMM Video Splitter Portable"
tuba_home="$SystemDrive\tuba"
oCam_DefaultSaveFolder="$appdata\oCam\oCam"

python_home="$appdata\python"
python_current_version="$python_home\python311"
python_scripts="$python_current_version\Scripts"
AutoRuns_home="$exes\autoruns"
ProcessExplorer_home="$exes\ProcessExplorer"
SevenZip_home="$scoop_home\apps\7zip"


FnKey=(rvpa "$windowsApps_cp\CLEVOCO.FnhotkeysandOSD_*\FnKey")
CC_home="$FnKey\CC40"

#处理多个版本,需要指定一个默认版本的情形,可以考虑用三元运算符来判断避免没有安装相应软件时报错,但是这类软件我是不建议一定要配置在环境变量里,直接固定快捷方式到开始菜单里面就可以了,或者目录的上一级目录配置一下就可以了
Geogebra_home= !(test-path $Geogebra_Series_home)? $GeoGebra_download : (rvpa $Geogebra_Series_home)[-1].ToString()
# bilibiliDownloader_home=((Resolve-Path "$AVTools\downKyi*\")[0]).ToString()
# wechatFilesUser1=$wechatFilesUsers[0]
# wechatFilesUser2=$wechatFilesUsers[1]